SET search_path TO projet;


-- Sch√©ma

DROP SCHEMA IF EXISTS projet CASCADE;
CREATE SCHEMA projet AUTHORIZATION projet;
GRANT ALL PRIVILEGES ON SCHEMA projet TO projet;

DROP TABLE IF EXISTS compte, ROLE, personne ;
-- Tables

-- COMPTE
CREATE TABLE compte (
	IdCompte		INT			 	NOT NULL	GENERATED BY DEFAULT AS IDENTITY,
	Pseudo			VARCHAR(25)		NOT NULL,
	MotDePasse		VARCHAR(25) 	NOT NULL,
	Email			VARCHAR(100)	NOT NULL,
	IdPersonne		INT				NULL,
	PRIMARY KEY (IdCompte)
);
CREATE UNIQUE INDEX idx_compte_pseudo ON compte (Pseudo ASC);

-- PERSONNE
CREATE TABLE personne (
	IdPersonne				INT				NOT NULL GENERATED BY DEFAULT AS IDENTITY,
	nom				VARCHAR(50) 	NOT NULL,
	prenom		    VARCHAR(50) 	NOT NULL,
	IdCompte		INT			    NULL,
	FOREIGN KEY (IdCompte) REFERENCES compte (IdCompte),
	PRIMARY KEY (IdPersonne)
);

-- ALTER TABLE COMPTE

ALTER TABLE compte ADD FOREIGN KEY (IdPersonne) REFERENCES personne(IdPersonne);


-- ROLE
CREATE TABLE role (
	IdCompte		INT				NOT NULL,
	Role			VARCHAR(20)		NOT NULL,
	CHECK( Role IN ('ADMINISTRATEUR','UTILISATEUR') ),	
	FOREIGN KEY (IdCompte) REFERENCES compte (IdCompte),
	PRIMARY KEY (IdCompte, Role)
);

-- AMIS
CREATE TABLE amis (
	-- IdAmis				INT				NOT NULL GENERATED BY DEFAULT AS IDENTITY,
	destinataire		INT 	NOT NULL,
	emetteur		    INT  	NOT NULL,
	date_de_demande		VARCHAR(50)			NOT NULL,
	status			    BOOLEAN			NOT NULL,
	FOREIGN KEY (destinataire) REFERENCES personne (IdPersonne),
	FOREIGN KEY (emetteur) REFERENCES personne (IdPersonne),
	PRIMARY KEY (destinataire, emetteur)
	--PRIMARY KEY (idAmis)
);


-- AUTEUR penser a ajouter le sexe
CREATE TABLE auteur (
	IdAuteur				INT				NOT NULL GENERATED BY DEFAULT AS IDENTITY,
	nom				        VARCHAR(50) 	NOT NULL,
	prenom		            VARCHAR(50) 	NOT NULL,
	date_naissance		    VARCHAR(50) 	NOT NULL,
	sexe		    		CHAR(1) 	NOT NULL,
	nationalite		        VARCHAR(50) 	NOT NULL,
	PRIMARY KEY (idAuteur)
);

-- CATEGORIE
CREATE TABLE categorie (
	IdCategorie				INT				NOT NULL GENERATED BY DEFAULT AS IDENTITY,
	nom_categorie		    VARCHAR(50) 	NOT NULL,
	PRIMARY KEY (idCategorie)
);

-- OUVRAGE
CREATE TABLE ouvrage (
	IdOuvrage				INT				NOT NULL GENERATED BY DEFAULT AS IDENTITY,
	titre				    VARCHAR(50) 	NOT NULL,
	date_parution		    VARCHAR(50) 	NOT NULL,
	date_achat		        VARCHAR(50) 	NOT NULL,
	image_livre		        VARCHAR(250)    NULL,
	langue_livre		    VARCHAR(50) 	NOT NULL,
	IdPersonne		        INT				NOT NULL,
	IdCategorie		        INT				NOT NULL,
	IdAuteur		        INT				NOT NULL,
	FOREIGN KEY (IdPersonne) REFERENCES personne (IdPersonne),
	FOREIGN KEY (IdCategorie) REFERENCES categorie (IdCategorie),
	FOREIGN KEY (IdAuteur) REFERENCES auteur (IdAuteur),
	PRIMARY KEY (idOuvrage)
);


-- EMPRUNTER
CREATE TABLE emprunter (
	IdPersonne 		    INT				NOT NULL,
	IdOuvrage		INT				NOT NULL,
	date_emprunt	VARCHAR(50) NOT NULL,
	FOREIGN KEY (IdPersonne) REFERENCES personne (IdPersonne),
	FOREIGN KEY (IdOuvrage) REFERENCES ouvrage (IdOuvrage),
	PRIMARY KEY (IdPersonne, IdOuvrage)
);
